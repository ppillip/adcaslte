<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.skt.adcas.lte.dao.sql">

    <select id="User.selectUserList" parameterType="hashmap" resultType="hashmap">
        SELECT B.*
          FROM (
                SELECT ROWNUM SEQ,
                        A.*
                  FROM (
                         SELECT TO_CHAR(A.REQUEST_DATE,'YYYY-MM-DD HH24:MI:SS') AS REQUEST_DATE
                                ,A.USER_ID
                                ,A.USER_PW
                                ,A.USER_NAME
                                ,A.GROUP_ID AS GROUP_ID
                                ,B.GROUP_DESC1 AS GROUP_DESC1
                                ,B.GROUP_DESC2 AS GROUP_DESC2
                                ,B.GROUP_DESC3 AS GROUP_DESC3
                                ,A.INPUT_GROUP
                                ,"LEVEL" AS "LEVEL"
                                ,NVL(A.MOBILE_NO,'') AS MOBILE_NO
                                ,NVL(A.EMAIL_ADDR,'') AS EMAIL_ADDR
                                ,CONFIRM_FLAG
                                ,DECODE(A.CONFIRM_FLAG,'Y','승인','N','요청','R','거부') AS CONFIRM_STATUS
                                ,TO_CHAR(A.CONFIRM_DATE,'YYYY-MM-DD HH24:MI:SS') AS CONFIRM_DATE
                                ,COUNT(*) OVER (PARTITION BY 1) TOTAL_COUNT
                           FROM USER_INFO A,
                                 USER_GROUP B
                          WHERE A.GROUP_ID = B.GROUP_ID(+)
                            <if test="USER_ID != null">
                            AND A.USER_ID = #{USER_ID}
                            </if>
                          ORDER BY REQUEST_DATE DESC NULLS LAST
                        ) A
                ) B
        <if test="pageNo != null">
        WHERE SEQ BETWEEN ((${pageNo}-1) * ${pageSize}) + 1
                        AND  ((${pageNo}-1) * ${pageSize}) + ${pageSize}
        </if>
    </select>

    <select id="User.checkDuplicatedID" parameterType="hashmap" resultType="hashmap">
        SELECT
        NVL(MAX('Y'),'N') AS DUP_CHK
        FROM USER_INFO
        WHERE USER_ID = #{USER_ID}

    </select>

    <select id="User.selectUserInfoFromQCAS" parameterType="hashmap" resultType="hashmap">
        SELECT USER_ID, USER_NAME, PASSWD, DECODE(USER_GRADE,'0','A','1','B','2','C','3','D') GRADE
          FROM QCAS.T_QCAS_USER@QCAS_LINK.REGRESS.RDBMS.DEV.US.ORACLE.COM
         WHERE USER_ID = #{USER_ID}
    </select>

    <insert id="User.insertUserInfoByQCAS" parameterType="hashmap">
        INSERT INTO USER_INFO
               (USER_ID,USER_NAME,USER_PW,"LEVEL",LOGIN)
        VALUES(#{USER_ID},#{USER_NAME},#{USER_PW},#{LEVEL},SYSDATE)
    </insert>

    <select id="User.selectUserGroupDesc1" parameterType="hashmap" resultType="hashmap">
        SELECT
        MAX(GROUP_ID) AS GROUP_ID
        ,GROUP_DESC1
        FROM USER_GROUP
        WHERE GROUP_DESC1 IS NOT NULL
        GROUP BY GROUP_DESC1
        ORDER BY 1 DESC

    </select>

    <select id="User.selectUserGroupDesc2" parameterType="hashmap" resultType="hashmap">
        SELECT
        MAX(GROUP_ID) AS GROUP_ID
        ,GROUP_DESC2
        FROM USER_GROUP
        WHERE GROUP_DESC1 = #{GROUP_DESC1}
          AND GROUP_DESC2 IS NOT NULL
        GROUP BY GROUP_DESC2
        ORDER BY 1

    </select>

    <select id="User.selectUserGroupDesc3" parameterType="hashmap" resultType="hashmap">
        SELECT
        MAX(GROUP_ID) AS GROUP_ID
        ,GROUP_DESC3
        FROM USER_GROUP
        WHERE GROUP_DESC2 = #{GROUP_DESC2}
          AND GROUP_DESC3 IS NOT NULL
        GROUP BY GROUP_DESC3
        ORDER BY 1
    </select>

    <insert id="User.insertUserInfo" parameterType="hashmap">
        INSERT INTO USER_INFO
                (USER_ID,
                 USER_NAME,
                 USER_PW,
                 MOBILE_NO,
                 EMAIL_ADDR,
                 "LEVEL",
                 GROUP_ID,
                <if test="INPUT_GROUP != null">
                 INPUT_GROUP,
                </if>
                <if test="CONFIRM_FLAG.equalsIgnoreCase('Y')">
                CONFIRM_FLAG,
                CONFIRM_DATE,
                </if>
                 REQUEST_DATE)
        VALUES (#{USER_ID},    
                 #{USER_NAME},  
                 #{USER_PW},    
                 #{MOBILE_NO},   
                 #{EMAIL_ADDR},  
                 #{LEVEL},
                <choose>
                    <when test="GROUP_DESC2 != null">
                        (SELECT MAX(X.GROUP_ID)
                           FROM USER_GROUP X
                          WHERE GROUP_DESC1 = #{GROUP_DESC1}
                            AND GROUP_DESC2 = #{GROUP_DESC2}
                            AND GROUP_DESC3 = #{GROUP_DESC3}),
                    </when>
                    <otherwise>
                        (SELECT MAX(X.GROUP_ID)
                           FROM USER_GROUP X
                          WHERE GROUP_DESC1 = #{GROUP_DESC1}),
                    </otherwise>
                </choose>
                <if test="INPUT_GROUP != null">
                 #{INPUT_GROUP},
                </if>
                 <if test="CONFIRM_FLAG.equalsIgnoreCase('Y')">
                 #{CONFIRM_FLAG},
                 SYSDATE,
                 </if>
                 SYSDATE)
    </insert>

    <update id="User.updateUserInfo" parameterType="hashmap">
        UPDATE USER_INFO
        <trim prefix="SET" suffixOverrides=",">
            <if test="USER_PW != null">
                USER_PW = #{USER_PW},
            </if>
            <if test="USER_NAME != null">
                USER_NAME = #{USER_NAME},
            </if>
            <if test="MOBILE_NO != null">
                MOBILE_NO = #{MOBILE_NO},
            </if>
            <if test="EMAIL_ADDR != null">
                EMAIL_ADDR = #{EMAIL_ADDR},
            </if>
            <choose>
                <when test="GROUP_DESC2 != null">
                    GROUP_ID = (SELECT MAX(X.GROUP_ID)
                                  FROM USER_GROUP X
                                 WHERE GROUP_DESC1 = #{GROUP_DESC1}
                                   AND GROUP_DESC2 = #{GROUP_DESC2}
                                   AND GROUP_DESC3 = #{GROUP_DESC3}),
                    INPUT_GROUP = NULL,
                </when>
                <otherwise>
                    GROUP_ID = (SELECT MAX(X.GROUP_ID)
                                  FROM USER_GROUP X
                                 WHERE GROUP_DESC1 = #{GROUP_DESC1}),
                    <if test="INPUT_GROUP != null">
                    INPUT_GROUP = #{INPUT_GROUP},
                    </if>
                </otherwise>
            </choose>
            <if test="!CONFIRM_FLAG.equalsIgnoreCase('N')">
                CONFIRM_FLAG = #{CONFIRM_FLAG},
                CONFIRM_DATE = SYSDATE
            </if>
        </trim>
            WHERE USER_ID = #{USER_ID}
    </update>

    <delete id="User.deleteUserInfo" parameterType="hashmap">

        DELETE USER_INFO
         WHERE USER_ID = #{USER_ID}

    </delete>

</mapper>